## WARNING: This file was autogenerated!
## Manual modifications will be overwritten
## unless ignore: true is set in generate.yaml!
## Last Modification: 16:43:18 on 06-01-2023.

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  labels:
    example.cloud/provider: example
  name: compositeaccesskey.iam.aws.example.cloud
spec:
  compositeTypeRef:
    apiVersion: iam.aws.example.cloud/v1beta1
    kind: CompositeAccessKey
  patchSets:
  - name: Name
    patches:
    - fromFieldPath: metadata.labels[crossplane.io/claim-name]
      toFieldPath: metadata.name
      type: FromCompositeFieldPath
  - name: Common
    patches:
    - fromFieldPath: metadata.labels['crossplane.io/claim-name']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['crossplane.io/claim-name']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['crossplane.io/claim-namespace']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['crossplane.io/claim-namespace']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['crossplane.io/composite']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['crossplane.io/composite']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['external-name']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['external-name']
      type: FromCompositeFieldPath
  - name: Parameters
    patches:
    - fromFieldPath: spec.deletionPolicy
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.deletionPolicy
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.accessKeyStatus
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.accessKeyStatus
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.userName
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.userName
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.userNameRef.name
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.userNameRef.name
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.userNameRef.policy.resolution
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.userNameRef.policy.resolution
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.userNameRef.policy.resolve
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.userNameRef.policy.resolve
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.userNameSelector.matchControllerRef
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.userNameSelector.matchControllerRef
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.userNameSelector.matchLabels
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.userNameSelector.matchLabels
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.userNameSelector.policy.resolution
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.userNameSelector.policy.resolution
      type: FromCompositeFieldPath
    - fromFieldPath: spec.forProvider.userNameSelector.policy.resolve
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.forProvider.userNameSelector.policy.resolve
      type: FromCompositeFieldPath
    - fromFieldPath: spec.providerConfigRef.name
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.providerConfigRef.name
      type: FromCompositeFieldPath
    - fromFieldPath: spec.providerConfigRef.policy.resolution
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.providerConfigRef.policy.resolution
      type: FromCompositeFieldPath
    - fromFieldPath: spec.providerConfigRef.policy.resolve
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.providerConfigRef.policy.resolve
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.configRef.name
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.configRef.name
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.configRef.policy.resolution
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.configRef.policy.resolution
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.configRef.policy.resolve
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.configRef.policy.resolve
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.metadata.annotations
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.metadata.annotations
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.metadata.labels
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.metadata.labels
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.metadata.type
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.metadata.type
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.name
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.name
      type: FromCompositeFieldPath
  - name: Labels
    patches:
    - fromFieldPath: metadata.labels['example-company/psp-element']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['example-company/psp-element']
      type: FromCompositeFieldPath
  resources:
  - base:
      apiVersion: iam.aws.crossplane.io/v1beta1
      kind: AccessKey
      metadata: {}
      spec:
        forProvider: {}
        providerConfigRef:
          name: default
        writeConnectionSecretToRef:
          namespace: crossplane-system
    connectionDetails:
    - fromConnectionSecretKey: username
    - fromConnectionSecretKey: password
    name: AccessKey
    patches:
    - patchSetName: Name
      type: PatchSet
    - patchSetName: Common
      type: PatchSet
    - patchSetName: Parameters
      type: PatchSet
    - patchSetName: Labels
      type: PatchSet
    - fromFieldPath: metadata.annotations["crossplane.io/external-name"]
      policy:
        fromFieldPath: Optional
      toFieldPath: status.uid
      type: ToCompositeFieldPath
    - fromFieldPath: status.conditions
      policy:
        fromFieldPath: Optional
      toFieldPath: status.observed.conditions
      type: ToCompositeFieldPath
    - fromFieldPath: metadata.uid
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.writeConnectionSecretToRef.name
      transforms:
      - string:
          fmt: '%s-secret'
        type: string
      type: FromCompositeFieldPath
  writeConnectionSecretsToNamespace: crossplane-system
